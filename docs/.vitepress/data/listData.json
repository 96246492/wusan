[{"id":1665910968622,"title":"css module","desc":"\n通过命名规范来限制类名太过死板，而css in js虽然足够灵活，但是书写不便。\ncss module 开辟一种全新的思路来解决类名冲突的问题\n 思路","imgSrc":"cssModule.png","path":"/wusan/blog/css module"},{"id":1665910968932,"title":"PostCss","desc":"什么是PostCss 学习到现在，可以看出，CSS工程化面临着诸多问题，而解决这些问题的方案多种多样。","imgSrc":"postcss-1.png","path":"/wusan/blog/postcss"},{"id":1665910969072,"title":"获取响应式数据","desc":"\nreactivity api: https://v3.vuejs.org/api/reactivity-api\n \n\n\nAPI\n传入\n返回\n备注\n\n\n\nreactive\nplain-object\n对象代理\n深度代理对象中的所有成员\n\n\nreadonly\nplain-object or proxy\n对象代理\n只能读取代理对象中的成员，不可修改\n\n\nref\nany\n{ value: ... }\n对value的访问是响应式的如果给value的值是一个对象，则会通过reactive函数进行代理如果已经是代理，则直接使用代理\n\n\ncomputed\nfunction\n{ value: ... }\n当读取value值时，会根据情况决定是否要运行函数\n\n","imgSrc":"","path":"/wusan/blog/reactivity api"},{"id":1665910969122,"title":"v-model","desc":"vue2比较让人诟病的一点就是提供了两种双向绑定：v-model和.sync，在vue3中，去掉了.sync修饰符，只需要使用v-model进行双向绑定即可。 为了让v-model更好的针对多个属性进行双向绑定，vue3作出了以下修改","imgSrc":"v-model.png","path":"/wusan/blog/v-model"},{"id":1665910969184,"title":"vuex方案","desc":"安装vuex@4.x 两个重要变动：","imgSrc":"globalState.png","path":"/wusan/blog/vuex方案"},{"id":1665910969211,"title":"webpack内置插件","desc":"所有的webpack内置插件都作为webpack的静态属性存在的，使用下面的方式即可创建一个插件对象 const webpack = require(\"webpack\")\n\nnew webpack.插件名(options)\n","imgSrc":"","path":"/wusan/blog/webpack内置插件"},{"id":1665910969262,"title":"星星之火可以燎原","desc":"林彪同志： 　　新年已经到来几天了，你的信我还没有回答。一则因为有些事情忙着，二则也因为我到底写点什么给你呢？有什么好一点的东西可以贡献给你呢？搜索我的枯肠，没有想出一点什么适当的东西来，因此也就拖延着。现在我想得一点东西了，虽然不知道到底于你的情况切合不切合，但我这点材料实是现今斗争中一个重要的问题，即使于你的个别情况不切合，仍是一般紧要的问题，所以我就把它提出来。","imgSrc":"","path":"/wusan/blog/星星之火可以燎原"}]